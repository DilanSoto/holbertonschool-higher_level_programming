>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/user/Desktop/holbertonschool-higher_level_programming/python-inheritance/7-base_geometry.py", line 22, in integer_validator
    raise TypeError(name + " must be an integer")
TypeError: name must be an integer
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/user/Desktop/holbertonschool-higher_level_programming/python-inheritance/7-base_geometry.py", line 24, in integer_validator
    raise ValueError(name + " must be greater than 0")
ValueError: age must be greater than 0
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/user/Desktop/holbertonschool-higher_level_programming/python-inheritance/7-base_geometry.py", line 24, in integer_validator
    raise ValueError(name + " must be greater than 0")
ValueError: distance must be greater than 0
>>> bg.integer_validator()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/user/Desktop/holbertonschool-higher_level_programming/python-inheritance/7-base_geometry.py", line 22, in integer_validator
    raise TypeError(name + " must be an integer")
TypeError: age must be an integer
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/user/Desktop/holbertonschool-higher_level_programming/python-inheritance/7-base_geometry.py", line 22, in integer_validator
    raise TypeError(name + " must be an integer")
TypeError: age must be an integer
>>> bg.integer_validator("age", True)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/user/Desktop/holbertonschool-higher_level_programming/python-inheritance/7-base_geometry.py", line 22, in integer_validator
    raise TypeError(name + " must be an integer")
TypeError: age must be an integer
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/user/Desktop/holbertonschool-higher_level_programming/python-inheritance/7-base_geometry.py", line 22, in integer_validator
    raise TypeError(name + " must be an integer")
TypeError: age must be an integer
>>> bg.integer_validator("age",(4,))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/user/Desktop/holbertonschool-higher_level_programming/python-inheritance/7-base_geometry.py", line 22, in integer_validator
    raise TypeError(name + " must be an integer")
TypeError: age must be an integer
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented
